Lab Details
This lab walks you through creating and monitoring  Resilient System Architecture Using EC2, RDS Multi-AZ, CloudWatch and SNS.

You will practice this lab using the services Amazon EC2, Amazon RDS, Amazon VPC, CloudWatch and SNS.

Duration: 2 hours

AWS Region: US East (N. Virginia) us-east-1

Introduction
What is Amazon RDS?
Amazon RDS
Amazon Relational Database Service (Amazon RDS)  is a Relational Database service that offers high availability and throughput.

Amazon RDS comes with great features that include Multi-AZ feature and Read Replica that ensures no data loss.

Amazon RDS also provides you with high scalability where you can scale up and scale down depending on your needs.

Amazon RDS provides you with six familiar database engines which include MySQL, Amazon Aurora, PostgreSQL, MariaDB, Oracle Database and SQL Server.

Multi-AZ
Multi-Availability zone ( Multi-AZ ) is a feature that comes with Amazon RDS that  provides you with high availability and durability for Database instances.

When we are opting for the Multi-AZ database instance, it will automatically create a Primary DB instance and parallelly replicate the data to the standby instances in different availability zones in that region. However, we can't access the standby instances, unlike primary instances.

The main purpose of Multi-AZ is to provide a failover option for primary RDS instances.

Amazon RDS uses the Failover mechanism for Oracle, MYSQL, MariaDB and PostgreSQL instances.

The RDS Failover process happens automatically and is managed by AWS  without human intervention.

Amazon RDS uses the concept of SQL Mirroring for Replicating data to standby instances in the different availability zones and both primary and standby instances use the same endpoint.

Reasons for Failover
The failover process will take place due to one of the following reasons occurring in the primary instances:

Host Failure 

DB instance class modification.

Instance rebooting

Availability zone failure

RDS maintenance     

Conditions for enabling Multi-AZ on RDS
A minimum of two different availability zones should be present in a DB subnet group where you are launching your Primary DB instance.

What is EC2?
AWS defines it as Elastic Compute Cloud.

It’s a virtual environment where “you rent” to have your environment created, without purchasing. 

Amazon refers to these virtual machines as Instances.

Preconfigured templates can be used to launch instances. These templates are referred to as images. Amazon provides these images in the form of AMIs (Amazon Machine Images).

Allows you to install custom applications and services.

Scaling of infrastructure i.e., up or down is easy based on the demand you face.

AWS provides multiple configurations of CPU, memory, storage etc., through which you can pick the flavor that's required for your environment.

Architecture Diagram


Task Details
Log into the AWS Management Console.

Create a VPC

Create and configure Internet Gateway

Create public and private subnets.

Create a Public and Private Route Table

Create a security group for EC2 and RDS

Create a subnet group for RDS

Launching an EC2 instance

Create a RDS database instance

Configuring cloudwatch metrics and adding a subscription

SSH into the instance

Triggering cloudwatch alarm for EC2 instance hardware failure

Creating SNS subscription for RDS failover

Validation of the lab

Clean up AWS resources.

Lab Steps
Task 1: Launching Lab Environment
Launch the lab environment by clicking on . Please wait until the lab environment is provisioned. It will take less than 2 minutes to provision the lab environment.

Once the Lab is started, you will be provided with IAM user name, Password, AccessKey and Secret Access Key. 

Click on the , AWS Management Console will open in a new tab.

In the AWS sign in page, the Account ID will be present by default.

Leave the Account ID as default. Do not remove or change the Account ID otherwise, you cannot proceed with the lab.

Copy and paste the IAM user name and Password into AWS Console. Click on Sign in to log into the AWS Console.

Note : If you face any issues, please go through FAQs and Troubleshooting for Labs.

Task 2: Create a VPC
In this task, you are creating a virtual private cloud for our instances.

Make sure you are in the US East (N. Virginia) Region.

Navigate to  by clicking on    under  section.

Click on the Your VPCs section on the left panel.

Here you can see the list of all VPC. No need to do anything with the existing and default VPCs, we will create a new VPC for this lab.

Click on .

Name tag: Enter  MyVPC (or any name of your wish)

IPv4 CIDR block: Enter 10.0.0.0/16

IPv6 CIDR block: Select No IPv6 CIDR Block

Tenancy: Leave it as  Default 

Now click on .


Once VPC is created, it will appear with details as shown below:



Task 3: Create and configure Internet Gateway
Click on Internet Gateways from the left menu and click .

Name tag : Enter MyInternetGateway

Click on .



Select the Internet gateway you created from the list

Click on Actions.

Click on Attach to VPC button.

Select MyVPC which you created from the list and click on Attach internet gateway button.



Task 4:Create public and private subnets
In this task, you are creating public and private subnets for our instances.

Make sure you are in the US East (N. Virginia) Region.

In the left panel click on Subnets and click on 

We are creating a public subnet for our EC2 instance.
In the dashboard,

VPC ID: Select MyVPC from the list you created earlier.

Subnet Name: Enter WhizPublicSubnet

Availability Zone: Select us-east-1a

IPv4 CIDR block: Enter 10.0.1.0/24



Click on 

We are going to create the two private subnets that we use for our RDS instance.

We are now creating the first private subnet,

VPC ID : Select MyVPC

Subnet Name   : Enter WhizPrivateSubnet-1

Availability Zone  : Select us-east-1a

IPv4 CIDR block  : Enter 10.0.2.0/24



Click on 

We are now creating the second private subnet,

VPC ID : Select MyVPC from the list you created earlier.

Subnet Name   : Enter WhizPrivateSubnet-2

Availability Zone  : Select us-east-1b

IPv4 CIDR block  : Enter 10.0.3.0/24



Click on 

Task 5: Create a Public and Private Route Table
In this task, you are creating a public and private route table and associating the private subnets to the private route table.

Go to Route Tables from the left menu and click on 

Name Tag: Enter PublicRouteTable

VPC: Select MyVPC from the list.

Click on 

Now, add a route to allow Internet traffic to the VPC.

Select PublicRouteTable.

Go to the Routes tab, click on the Edit routes button and on the next page, click on Add route.



Specify the following values: 

Destination: Enter 0.0.0.0/0

Target: Select Internet Gateway from the dropdown menu to select MyInternetGateway.



Click on Save changes button.

Now associate the subnets to the route tables.

Go to subnet associations,

Click on .

Select WhizPublicSubnet from the list.



Click on Save associations.

Go to Route Tables from the left menu and click on .

Name Tag: Enter PrivateRouteTable

VPC: Select MyVPC

Click on 

Now associate the subnets to the route tables.

Click on .

Select WhizPrivateSubnet-1,WhizPrivateSubnet-2 from the list.



Click on Save associations.

Task 6: Create a security group for EC2 and RDS  
In this task, you are creating a security group for both EC2 and RDS .

Make sure you are in the US East (N. Virginia) Region.

Navigate to EC2 by clicking on the  menu in the top, then click on EC2 under the  section.

Firstly we are creating a security group for EC2,

 Under security groups, click on .

Security group name:  Enter EC2-SG

Description: Enter Security group for EC2 

VPC: Select MyVPC



 

Click on edit inbound rules,  Click on Add rule

Choose Type: SSH

Source: Select Custom (0.0.0.0) or Anywhere-IPv4



Now click on the . 

We are now creating a security group for RDS.

Under security groups, click on .

Security group name:  Enter RDSMulti-AZ

Description: Enter Security group for RDS

VPC: Select MyVPC



Click on Edit inbound rules button,  Click on Add rule button.

Choose Type: MySQL/Aurora

Source: Select the security group of EC2 that was created earlier EC2-SG 



Click on 

Task 7: Create a subnet group for RDS 

In this task, you are creating a subnet group for Multi-AZ deployment in RDS.

Make sure you are in the US East (N. Virginia) Region.

Navigate to RDS by clicking on the  menu in the top, then click on RDS under the  section.

On the left panel select the Subnet groups after that . This is mainly used for launching your database in a private subnet.

click on  .Under subnet group details,

Name:  Enter RDSMultiAZ-SBG

Description: Enter Subnet group for RDS Multi-AZ

VPC: Select MyVPC



Under Add subnets section,

Availability Zones: select us-east-1a,us-east-1b

Subnets: Select both IPv4 addresses of the private subnets we have created.



Click on the create button.

Task 8: Launching an EC2 instance
In this instance, you are launching an EC2 mainly for hardware simulation test.

Make sure you are in the US East (N. Virginia) Region.

Navigate to EC2 by clicking on the  menu in the top, then click on EC2 under the  section.

Navigate to Instances from the left side menu and click on .

Choose an Amazon Machine Image (AMI): Search for Amazon Linux 2 AMI in the search box and click on the select button.



Choose an Instance Type: select  and then click on Next: Configure Instance Details

Configure Instance Details:

Network: Choose MyVPC

Subnet: Choose the created subnet  WhizPublicSubnet

Auto-assign Public IP: Select Enable

IAM Role: Select WhizEC2CloudWatchRole_<RANDOM_NUMBER> from the dropdown list.





Click on 

Add Storage: No need to change anything in this step, Click on  Next: Add Tags

Add Tags: Click on Add Tag

Key: Enter Name

Value: Enter WhizEC2

Click on Next: Configure Security Group

On the Configure Security Group page:

Select existing security group: Select EC2-SG from the list



After that, click on Review and launch

Review and Launch: Review all settings and click on Launch.

Key Pair: Create a new key pair Enter WhizEC2KeyPair

Key Pair type : Select RSA and click on Download Key Pair button and after that, click on Launch Instance.

Launch Status: Your instance is now launching. Click on the instance ID and wait for complete initialization of the instance (until the status changes to Running).


Copy and paste the created EC2 instance id in a notepad for future reference.

Task 9: Create a RDS database instance
In this task, you are creating a RDS instance with Multi-AZ enabled ( in two availability zones).

Navigate to RDS by clicking on the  menu in the top, then click on RDS under the  section.

Make sure you are in the US East (N. Virginia) Region.

RDS dashboard will be displayed.

Click on the  button and you are navigated to the page where you will provide all the required details to create a MySQL database.

On the page, click on the option Standard create a method for our lab requirement.



In the Engine options, select MySQL engine type.



Edition: Leave it as default

Under Templates, select Dev/Test option.



Under Availability and durability, select Deployment options as Multi-AZ DB Instance



 

Under Settings, provide the following details.

DB instance identifier: Enter database-1

Master username: Enter whizlabadmin

Master password: Enter whizlabs123

Confirm password: Enter whizlabs123

    Note - Make sure the master and confirm passwords should be the same and also note the username and password.



Under DB instance class, select Burstable classes (including t classes) and select db.t3.micro



Storage: 

Enable storage autoscaling: Uncheck the option

Leave all the values in storage as default.

Under connectivity,

VPC: choose MyVPC

Public access: Select No

VPC Subnet Group: Select RDSMultiAZ-SG



Under VPC Security group: Select RDSMulti-AZ



Leave all the other options default and click on 

It will take 15-20 minutes to create the database and the status will turns to Available.

Now, the database is successfully created.

Task 10: Configuring cloudwatch metrics and adding a subscription
In this task, you are creating an alarm and adding a subscription for EC2 recovering.

Navigate to CloudWatch by clicking on the  menu in the top, then click on CloudWatch under the  section.

Make sure you are in the US East (N. Virginia) Region.

Click on All alarms under Alarms in the left panel and then click on Create alarm

Click on Select metric to choose the metric that will trigger our alarm

Copy the instance id of the EC2 instance(WhizEC2) created.

Now paste the instance id in the search bar.

We can see this EC2 > Per-Instance Metrics, click on it.



Select the StatusCheckFailed_System metric and click Select metric.

?

Now, add the following conditions to it:

Statistics: select  Average

Period: select 1 minute



In alarm conditions,

Threshold type: select static

Whenever statusCheckfailed system is: Select Greater/Equal

Than(Define threshold value) :Enter 1

Click Next.



Now we are going to create  notification and recovery actions for the EC2 instance failover

Now navigate to Notification section,

Alarm state trigger: Select In alarm

In SNS topic: Select Create new topic

Topic name: Enter EC2FailAlarm

Email endpoints that will receive the notification..: Enter your email address



Now click on the Create topic button.

For recovery of EC2, we will create EC2 action, to do so, scroll down and click on .

Alarm state trigger: Select In alarm

Take the following action:  Select Recover this instance



Click on the Next button.

Alarm name: Enter  EC2Recover

Description: Enter EC2Recover



          Click on Next button

After previewing now click on create alarm button. However, you will see a pending notification.

Go to your email address and you would receive a notification from AWS. Check your spam email if you have not received it in the inbox.



Click on Confirm subscription link. You will see that you are now subscribed to this notification.



Task 11: SSH into the EC2 instance
To SSH into WhizEC2 Instance follow the steps below.

Make sure you are in the US East (N. Virginia) Region.

Select the instance WhizEC2. Click on Connect button.



Now select the EC2 Instance Connect option. You can see there are four options for connecting to EC2. You can use any of the given options to get in the console but for our lab, we are using EC2 instance connect. 

    

A new tab would be opened in your browser where we can see the console.



Task 12: Triggering cloud watch alarm for EC2 instance hardware failure
In this task, you will be simulating the hardware failure of the EC2 instance so we can test out the cloudwatch alarms and notifications.

After SSH into your instance perform the following commands

aws configure

Press enter until you reach the default region. Enter us-east-1 in the default region and continue pressing enter.



The next command is to change the alarm state and simulate failure.

aws cloudwatch set-alarm-state --alarm-name "EC2Recover" --state-value ALARM --state-reason "Simulate Hardware Failure"

After this command, go to CloudWatch alarms. You can see the alarm changed to In alarm from Ok.



Click on EC2Recover. You can see the actions in the History section.



You will also receive an SNS notification in your email. Check your spam email if you have not received it in the inbox.



You can also explore different actions in alarm.

Task 13: Creating SNS subscription for RDS failover
In this task, you are simulating an RDS failover and also an sns subscription to send the notification as soon as the failover happens.

Navigate to under the   section of the Services menu.

Make sure you are in the US East (N. Virginia) Region.

On the left panel, we can observe the Event subscriptions section, click on it.

Click on the ,

Event subscription name: Enter RDSfailover

Target: choose New Email topic

Topic Name: Enter RDSfailNotification

With these recipients: Enter your mail id



In the source section,

Source type: Select Instances

Instances to include: Choose specific instances

Specific instance: Select database-1

Event categories to include: Select All event categories



Click on create button.

Now go to your emails, you will receive a notification from the AWS side.If you have not received it check in your spam mail.



Click on Confirm subscription link.

Your email address is now subscribed to SNS Topic RDSfailNotification.



Now, navigate to Database instances, on the left panel, click on database-1

In action select Reboot, check Reboot with Failover option.



Click on Confirm button.

Wait for few minutes to fail.

You will now get a notification/mail in your inbox or your spam about the database failover.



Task 14: Validation Test
Once the lab steps are completed, please click on the  button on the left side panel.

This will validate the resources in the AWS account and displays whether you have completed this lab successfully or not.

Sample output : 



Task 14: Clean up AWS Resources
Deleting EC2 Instance
Navigate to EC2 by clicking on the  menu in the top, then click on EC2 under the  section.

All the EC2 Instances will be listed here,



To terminate the EC2, perform the following task:

Select your EC2 instance, 

Click on Instance state.

Select Terminate instance



Finally, Click on terminate.



EC2 Instance will be terminated in a few minutes.

Deleting RDS DB Instance
Navigate to RDS by clicking on the  menu in the top, then click on RDS under the  section.

Click on DB Instances.

It will list all the RDS databases



Click on the Actions button and click on Delete.



To delete we have to perform several tasks:

Uncheck the option of Create final snapshot

Uncheck the option Retain Automated backups.

Acknowledge by selecting the I acknowledge that upon instance deletion, automated backups, including system snapshots and point-in-time recovery, will no longer be available.

Type delete me to confirm.



It will take around, 5 minutes to delete the instance.

Go to event subscriptions on the left menu and select RDSfailover SNS.



Just click on the Delete button to delete the event subscription.

Deleting Cloud Watch Alarm:
Navigate to CloudWatch by clicking on the  menu in the top, then click on CloudWatch under the  section.

On the left panel click on All alarms option. Go to EC2Recover and select it. Then, click on actions and delete.



Completion and Conclusion
You have successfully created and launched Amazon EC2, Amazon RDS Instance.

You have successfully created VPC and its components.

You have successfully logged into the EC2 instance by SSH.

You have successfully created and subscribed to the event notification

You have successfully simulated hardware failures in both EC2 and RDS

You have successfully recovered the EC2 instance.
